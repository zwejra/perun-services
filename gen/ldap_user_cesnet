#!/usr/bin/perl
use feature "switch";
use strict;
use warnings;
use perunServicesInit;
use perunServicesUtils;

local $::SERVICE_NAME = "ldap_user_cesnet";
local $::PROTOCOL_VERSION = "3.0.0";
my $SCRIPT_VERSION = "3.0.0";

perunServicesInit::init;
my $DIRECTORY = perunServicesInit::getDirectory;
my $fileName = "$DIRECTORY/$::SERVICE_NAME".".ldif";
my $baseDnFileName = "$DIRECTORY/baseDN";
my $optAttrsFileName = "$DIRECTORY/optAttributes";

my $data = perunServicesInit::getFlatData;

# Constants
our $A_F_BASE_DN;  *A_F_BASE_DN = \'urn:perun:facility:attribute-def:def:adBaseDN'; 

# User attributes
our $A_FIRST_NAME;  *A_FIRST_NAME = \'urn:perun:user:attribute-def:core:firstName';
our $A_LAST_NAME;  *A_LAST_NAME = \'urn:perun:user:attribute-def:core:lastName';
our $A_MAIL;  *A_MAIL = \'urn:perun:user:attribute-def:def:preferredMail';
our $A_EPPNS; *A_EPPNS = \'urn:perun:user:attribute-def:virt:eduPersonPrincipalNames';
our $A_LOGIN; *A_LOGIN = \'urn:perun:user:attribute-def:def:login-namespace:cesnet-eduroam';
our $A_TELNUMBERS;  *A_TELNUMBERS = \'urn:perun:member:attribute-def:def:telephoneNumbers';
our $A_MOBILENUMBERS;  *A_MOBILENUMBERS = \'urn:perun:member:attribute-def:def:mobileNumbers';
our $A_STATUS; *A_STATUS = \'urn:perun:member:attribute-def:core:status';


# CHECK ON FACILITY ATTRIBUTES
my %facilityAttributes = attributesToHash $data->getAttributes;
if (!defined($facilityAttributes{$A_F_BASE_DN})) {
	exit 1;
}
my $baseDN = $facilityAttributes{$A_F_BASE_DN};

# GATHER USERS
my $users;  # $users->{$login}->{ATTR} = $attrValue;

#
# PRINT BASE_DN FILE
#
open FILE,">:encoding(UTF-8)","$baseDnFileName" or die "Cannot open $baseDnFileName: $! \n";
print FILE $baseDN;
close(FILE);

#
# AGGREGATE DATA
#
# FOR EACH USER
foreach my $user (($data->getChildElements)[1]->getChildElements) {

	my %uAttributes = attributesToHash $user->getAttributes;

	my $login = $uAttributes{$A_LOGIN};

	# Store standard attrs
	$users->{$login}->{"dn"} = "uid=" . $uAttributes{$A_LOGIN} . "," . $baseDN;
	$users->{$login}->{$A_FIRST_NAME} = $uAttributes{$A_FIRST_NAME};
	$users->{$login}->{$A_LAST_NAME} = $uAttributes{$A_LAST_NAME};
	$users->{$login}->{$A_EPPNS} = $mAttributes{$A_EPPNS};
	$users->{$login}->{$A_MAIL} = $uAttributes{$A_MAIL};
	$users->{$login}->{$A_TELNUMBERS} = $uAttributes{$A_TELNUMBERS};
	$users->{$login}->{$A_MOBILENUMBERS} = $uAttributes{$A_MOBILENUMBERS};
	$users->{$login}->{$A_STATUS} = $uAttributes{$A_STATUS};
}

#
# PRINT user data LDIF
#
open FILE,">$fileName" or die "Cannot open $fileName: $! \n";
binmode FILE, ":utf8";

# FOR EACH USER ON FACILITY
my @logins = sort keys %{$users};
for my $login (@logins) {

	# Print attributes, which are never empty
	print FILE "dn: " . $users->{$login}->{"dn"} . "\n";
	print FILE "uid: " . $login . "\n";
    print FILE "cn: " . $users->{$login}->{$A_FIRST_NAME} . " " . $users->{$login}->{$A_LAST_NAME} . "\n";
	
	my $status = $users->{$login}->{$A_STATUS};
	my $sn = $users->{$login}->{$A_LAST_NAME};
	my $givenName = $users->{$login}->{$A_FIRST_NAME};
	my $mail = $users->{$login}->{$A_MAIL};
	my $eppns = $users->{$login}->{$A_EPPNS};
	my $telNumbers = $users->{$login}->{$A_TELNUMBERS};
	my $mobileNumbers = $users->{$login}->{$A_MOBILENUMBERS};

	if ($status eq "VALID") {
		print FILE "entryStatus: active\n";
	}
	else {
		print FILE "entryStatus: dead\n";
	}

	if (defined $sn and length $sn) {
		print FILE "sn: " . $sn . "\n";
	}
	if (defined $givenName and length $givenName) {
		print FILE "givenName: " . $givenName . "\n";
	}
	if (defined $mail and length $mail) {
		print FILE "mail: " . $mail . "\n";
	}

	foreach my $val (@$eppns) {
		print FILE "eduPersonPrincipalNames: " . $val . "\n";
	}

	foreach my $val (@$telNumbers) {
		print FILE "telephoneNumber: " . $val . "\n";
	}

	foreach my $val (@$mobileNumbers) {
		print FILE "mobile: " . $val . "\n";
	}

	# Print classes
	print FILE "objectclass: top\n";
	print FILE "objectclass: person\n";
	print FILE "objectclass: user\n";
	print FILE "objectclass: organizationalPerson\n";

	# There MUST be an empty line after each entry, so entry sorting and diff works on slave part
	print FILE "\n";

}

close(FILE);

perunServicesInit::finalize;
